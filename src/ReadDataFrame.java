
import java.awt.event.WindowAdapter;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ram
 */
public class ReadDataFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReadDataFrame
     */
    Boolean isOpen = false;
    Boolean isDetailOpen = false;
    Database database;

    ArrayList<PesananModel> pesananList;
    ArrayList<Object> pesananSearchList;
    DefaultTableModel defaultTableModel = new DefaultTableModel();
  

    String[] columnNames = {"No", "Resi", "Nama", "Alamat", "No-telp", "Produk", "QTY", "Konfirmasi", "Status"};
    TableRowSorter<TableModel> rowSorter;
    int no;
    public ReadDataFrame( ) {
        this.pesananSearchList = new ArrayList<>();
        database = new Database();
        defaultTableModel.setColumnIdentifiers(columnNames);
 
        initComponents();
        fetchData();
      
    rowSorter = new TableRowSorter<>(jTable1.getModel());
    jTable1.setRowSorter(rowSorter);
    // jTextField1.getDocument().addDocumentListener(new DocumentListener(){

    //     @Override
    //     public void insertUpdate(DocumentEvent e) {
    //         String text = jTextField1.getText();

    //         if (text.trim().length() == 0) {
    //             rowSorter.setRowFilter(null);
    //         } else {
    //             rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
    //         }
    //     }

    //     @Override
    //     public void removeUpdate(DocumentEvent e) {
    //         String text = jTextField1.getText();

    //         if (text.trim().length() == 0) {
    //             rowSorter.setRowFilter(null);
    //         } else {
    //             rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
    //         }
    //     }

    //     @Override
    //     public void changedUpdate(DocumentEvent e) {
    //         throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //     }

    // });
    }

  
    public void fetchData(){
        try {
            
          
           pesananList =  database.readData();
           for (PesananModel psn : pesananList) {
                no++;
                Object[] data = {no, psn.getResi(), psn.getNama(), psn.getAlamat(), psn.getNoTelp(), psn.getProduk(), psn.getJumlahProduk(), psn.getInformasi(), psn.getStatus()} ;          
                defaultTableModel.addRow(data);
            }
         
           jTable1.setModel(defaultTableModel);
           jTable1.getColumnModel().getColumn(0).setMinWidth(30);
           jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
           jTable1.getColumnModel().getColumn(1).setMinWidth(120);
           jTable1.getColumnModel().getColumn(2).setMinWidth(150);
           jTable1.getColumnModel().getColumn(3).setMinWidth(120);
           jTable1.getColumnModel().getColumn(4).setMinWidth(120);
           jTable1.getColumnModel().getColumn(5).setMinWidth(100);
           jTable1.getColumnModel().getColumn(6).setMaxWidth(50);
           jTable1.getColumnModel().getColumn(7).setMinWidth(200);
           jTable1.getColumnModel().getColumn(8).setMaxWidth(80);
           jTable1.setDefaultEditor(Object.class, null);
        } catch (SQLException e) {
        
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }
    
    
 
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Tambah pesanan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Detail Pesanan");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setText("Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1059, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Tambah pesanan

        TambahPesanan tambahPesanan = new TambahPesanan(database);
     
        if(isOpen==false){
            tambahPesanan.setLocationRelativeTo(null);
            tambahPesanan.setVisible(true);
            this.setVisible(false);
            isOpen = true;
        }

        tambahPesanan.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
              
               isOpen = false;  
               java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    ReadDataFrame readDataFrame = new ReadDataFrame();
                    readDataFrame.setLocationRelativeTo(null);
                    readDataFrame.setVisible(true);
                }
            });

             
            }
          
        });
        System.out.println(isOpen);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Delete button

        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow>= 0){
        String message = String.format("Anda yakin menghapus resi \"%s\" dengan nama \"%s\" ?????", pesananList.get(selectedRow).getResi(), pesananList.get(selectedRow).getNama());
        int result_option = JOptionPane.showConfirmDialog(rootPane, message, "ALERT", JOptionPane.YES_NO_OPTION);
        

        if(result_option==JOptionPane.YES_OPTION){
           
                try {
                   
    
                    database.deleteData(pesananList.get(selectedRow).getId());
                   defaultTableModel.removeRow(selectedRow);
                   pesananList.remove(selectedRow);
    
                   for (int i = 0; i < pesananList.size(); i++) {
                        defaultTableModel.setValueAt(i+1, i, 0);
                   }
                   jTable1.setModel(defaultTableModel);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan " + e.getMessage());
                }
            }
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Detail
        
        int selectedRow = jTable1.getSelectedRow();


        

        if(selectedRow>=0){
            DetailPesanan detailPesanan = new DetailPesanan(pesananList.get(selectedRow),database);
        if(isDetailOpen ==false){
 
                detailPesanan.setLocationRelativeTo(null);
                detailPesanan.setVisible(true);
                isDetailOpen = true;
            }
           
       
        detailPesanan.addWindowListener(new WindowAdapter() {
            
            public void windowClosing(java.awt.event.WindowEvent e){
                isDetailOpen=false;
              
            }

            
        });

        this.addWindowListener(new WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent e){
                dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        ReadDataFrame readDataFrame = new ReadDataFrame();
                        readDataFrame.setLocationRelativeTo(null);
                        readDataFrame.setVisible(true);
                    }
                });
            }
        });
    }
        

       
       
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // Key released
            // DefaultTableModel obj = (DefaultTableModel)jTable1.getModel();
            // TableRowSorter<TableModel> obj1 = new TableRowSorter<>(jTable1.getModel());
            // jTable1.setRowSorter(obj1);
            // obj1.setRowFilter(RowFilter.regexFilter(jTextField1.getText().toLowerCase()));
            String text = jTextField1.getText();

            if (text.trim().length() == 0) {
                rowSorter.setRowFilter(null);
            } else {
                rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
            }
        
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
